name: Build and test

on:
  push:
    branches: [ "main" , "master"]
  pull_request:
    branches: [ "main" , "master"]
  workflow_dispatch:

env:
  CMAKE_BUILD_TYPE: Release

jobs:

  autoconf_ga:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    container:
      # relies on repository name being all lower case
      image: ghcr.io/${{ github.repository }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v5

      - name: Configure
        run: ./configure CXX=mpicxx --with-ga --enable-fortran FC=mpif90

      - name: Build
        run: make

      - name: Test
        run: |
          make test LIBS='-lga -larmci -lstdc++'
          for t in ppidd_ctest.exe ppidd_sf_test.exe ppidd_test.exe ; do mpiexec -np 4 test/$t; done


  autoconf_ga_i8:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    container:
      # relies on repository name being all lower case
      image: ghcr.io/${{ github.repository }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v5

      - name: Configure
        run: ./configure CXX=mpicxx --with-ga --enable-fortran FC=mpif90 FCFLAGS=-fdefault-integer-8

      - name: Build
        run: make

      - name: Test
        run: |
          make test LIBS='-lga -larmci -lstdc++'
          for t in ppidd_ctest.exe ppidd_sf_test.exe ppidd_test.exe ; do mpiexec -np 4 test/$t; done


  autoconf_mpi:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    container:
      # relies on repository name being all lower case
      image: ghcr.io/${{ github.repository }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v5

      - name: Configure
        run: ./configure CXX=mpicxx --with-mpi --enable-fortran FC=mpif90 FCFLAGS=-fdefault-integer-8

      - name: Build
        run: make

      - name: Test
        run: |
          make test LIBS='-lstdc++'
          for t in ppidd_ctest.exe ppidd_sf_test.exe ppidd_test.exe ; do mpiexec -np 4 test/$t; done


  autoconf_mpi_i8:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    container:
      # relies on repository name being all lower case
      image: ghcr.io/${{ github.repository }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v5

      - name: Configure
        run: ./configure CXX=mpicxx --with-mpi --enable-fortran FC=mpif90 FCFLAGS=-fdefault-integer-8

      - name: Build
        run: make

      - name: Test
        run: |
          make test LIBS='-lstdc++'
          for t in ppidd_ctest.exe ppidd_sf_test.exe ppidd_test.exe ; do mpiexec -np 4 test/$t; done
  

  autoconf_serial:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    container:
      # relies on repository name being all lower case
      image: ghcr.io/${{ github.repository }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v5

      - name: Configure
        run: ./configure --enable-fortran

      - name: Build
        run: make

      - name: Test
        run: |
          make test
          for t in ppidd_ctest.exe ppidd_sf_test.exe ppidd_test.exe ; do ./test/$t; done
  

  autoconf_serial_i8:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    container:
      # relies on repository name being all lower case
      image: ghcr.io/${{ github.repository }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v5

      - name: Configure
        run: ./configure --enable-fortran FCFLAGS=-fdefault-integer-8

      - name: Build
        run: make

      - name: Test
        run: |
          make test
          for t in ppidd_ctest.exe ppidd_sf_test.exe ppidd_test.exe ; do ./test/$t; done


  cmake_ga:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    container:
      # relies on repository name being all lower case
      image: ghcr.io/${{ github.repository }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v5

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.CMAKE_BUILD_TYPE}} -DPPIDD-GA=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.CMAKE_BUILD_TYPE}}

      - name: Test
        run: cd ${{github.workspace}}/build && ctest -C ${{env.CMAKE_BUILD_TYPE}} || ctest -C ${{env.CMAKE_BUILD_TYPE}} --rerun-failed --output-on-failure


  cmake_mpi:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    container:
      # relies on repository name being all lower case
      image: ghcr.io/${{ github.repository }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - uses: actions/checkout@v5

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.CMAKE_BUILD_TYPE}} -DPPIDD-GA=OFF

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.CMAKE_BUILD_TYPE}}

    - name: Test
      run: cd ${{github.workspace}}/build && ctest -C ${{env.CMAKE_BUILD_TYPE}} || ctest -C ${{env.CMAKE_BUILD_TYPE}} --rerun-failed --output-on-failure

    - name: Build doxygen
      run: cmake --build ${{github.workspace}}/build --target ppidd_doc
