
           Parallel Programming Interface for Distributed Data
           ===================================================

 This package provides the Parallel Programming Interface for
 Distributed Data (PPIDD) library.

 1. Prerequisites

    - GNU make version 3.81 or higher

    - A Fortran compiler which supports Fortran 2003 Standard features

    - A C compiler

    - An MPI2 library

    OR

    - Global Arrays library

      We strongly recommend that the same compilers are used for
      compiling the Global Arrays and PPIDD libraries.

 2. Building the library

    By default, the supplied GNUmakefile attempts to build the library
    using the commands 'mpif90' and 'mpicc', which are typically available
    when an MPI2 library has been installed. If you wish to override this,
    the following are some common variables which may need to be set on the
    command line using the form

    make VAR1=value1 VAR2=value2 ...

    - CXX      C++ compiler
    - FC       Fortran compiler
    - MPICC    an MPI2-aware C compiler
    - MPIFC    an MPI2-aware Fortran compiler
    - INCLUDE  directory containing MPI2 or GA include files
    - MPILIB   MPI linking options, eg. '-L/usr/lib -lmpi'
    - BUILD    either MPI2 (default) or GA_MPI
    - CFLAGS   C compiler flags
    - FFLAGS   Fortran compiler flags
    - INTEGER  setting INTEGER=8 lets make know that the compilers use 8-byte integers.
	       Note, make does not force the compilers to do this, it is up to the
               user to make any necessary changes to CFLAGS/FFLAGS.
    - NXTVAL   setting NXTVAL=n disables the helper process (PPIDD_Nxtval)
               for MPI2 builds, by default it is enabled.

    Note: When the library is built on top of Global Arrays library, the -Vaxlib option is
    needed for Intel Fortran compilers ( including an MPI2-aware Fortran compiler who invokes
    Intel  Fortran compiler ) to link with a Fortran main program ( make .... FFLAGS=-Vaxlib ).
    This option can allow getarg() and iargc(), which are not part of the Fortran standard, to
    be resolved properly. In addition, when the library is built on top of GA 5.0 or higher,
    BUILD=GA_MPI must be specified explicitly.

    Building examples are avaible at ./doc/doxygen/html/index.html after the documentation is built.

 3. Testing the library

    Once the library has been built successfully some tests will appear
    in the 'test' directory, identifiable by an .exe suffix. These tests
    should be run in order to check the library is working correctly, eg.

    mpiexec -np 4 ./test/ppidd_test.exe

    A sample output for this test can be found at ./test/ppidd_test.out (please be aware the results
    are machine-dependent).

 4. Building the documentation

    This should not be necessary since PPIDD is distributed with
    documentation precompiled. If you should choose to recompile, then
    the doxygen program is required.

    make doc

 5. Directory and file structure

    Inside of the PPIDD root directory, the following files and subirectories
    are distributed:
       .
       |-- GNUmakefile                        Makefile to build PPIDD
       |-- README                             README for PPIDD
       |-- ./doc                              Document directory
       |-- ./lib                              Final location of PPIDD library
       |-- ./src                              Source code directory for PPIDD library
       |-- ./test                             Test code directory for PPIDD library

    For more details, please see ./doc/doxygen/html/index.html after the documentation is built.

 6. Questions

    The distribution has been tested by us on a variety of machines in our environments. If you
    have any problem about the PPIDD (including installation, usage, bug report, suggestion etc),
    please send an email to molpro@molpro.net.

